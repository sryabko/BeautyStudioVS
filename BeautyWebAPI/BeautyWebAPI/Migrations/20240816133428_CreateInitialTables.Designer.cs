// <auto-generated />
using BeautyWebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BeautyWebAPI.Migrations
{
    [DbContext(typeof(BeautyStudioDbContext))]
    [Migration("20240816133428_CreateInitialTables")]
    partial class CreateInitialTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BeautyWebAPI.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BeautyWebAPI.Entities.Hairdresser", b =>
                {
                    b.Property<int>("HairdresserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HairdresserId"));

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HairdresserId");

                    b.ToTable("Hairdressers");
                });

            modelBuilder.Entity("BeautyWebAPI.Entities.Session", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SessionId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("HairdresserId")
                        .HasColumnType("int");

                    b.HasKey("SessionId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("HairdresserId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("BeautyWebAPI.Entities.Session", b =>
                {
                    b.HasOne("BeautyWebAPI.Entities.Customer", "Customer")
                        .WithMany("Sessions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeautyWebAPI.Entities.Hairdresser", "Hairdresser")
                        .WithMany("Sessions")
                        .HasForeignKey("HairdresserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Hairdresser");
                });

            modelBuilder.Entity("BeautyWebAPI.Entities.Customer", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("BeautyWebAPI.Entities.Hairdresser", b =>
                {
                    b.Navigation("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
